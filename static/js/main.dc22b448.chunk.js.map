{"version":3,"sources":["fbase.js","routes/Auth.js","components/Comment.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","className","type","placeholder","required","onClick","prev","Comment","commentObject","isLabel","comments","Home","userObj","nweet","setNweet","setNweets","comment","getComments","collection","get","forEach","document","useEffect","onSnapshot","snapshot","nweetArray","docs","map","doc","id","add","url","createdAt","Date","now","creatorId","uid","maxLength","key","label","Navigation","to","history","useHistory","signOut","push","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dc22b448.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();","import { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Auth.css\";\r\n\r\n\r\nconst Auth= () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) =>{\r\n        const {\r\n            target: {name, value}\r\n        } =event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if (name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            }\r\n            else{\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data); \r\n            \r\n        }catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    \r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    const onSocialClick = async (event) => {\r\n        const {target:\r\n             {name},\r\n            } = event;\r\n            let provider;\r\n            if(name === \"google\"){\r\n                provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n            } else if(name === \"github\"){\r\n                provider = new firebaseInstance.auth.GithubAuthProvider();\r\n            }\r\n            const data = await authService.signInWithPopup(provider);\r\n            console.log(data);\r\n    };\r\n\r\n    return (\r\n    <div className=\"sign_box\">\r\n        <div className=\"box\">\r\n            <p className=\"sign_up_title\">Sign up</p>\r\n            <form onSubmit={onSubmit}>\r\n                <input \r\n                    name=\"email\" \r\n                    type=\"text\" \r\n                    placeholder=\"Email\" \r\n                    required value={email}\r\n                    onChange={onChange}\r\n                    className=\"input_text\"\r\n                />\r\n                <input \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    required value={password}\r\n                    onChange={onChange}\r\n                    className=\"input_text\"\r\n                />\r\n            <div className=\"btn_box\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"google_btn btn\">Continue wtih Google</button>\r\n            </div>\r\n                <input type=\"submit\" value={newAccount ? \"create Account\" : \"LogIn\"} className=\"login_btn btn\"/>\r\n                {error}\r\n                <div onClick={toggleAccount} className=\"clickBtn btn\">\r\n                {newAccount ? \" 로그인하기\" : \"회원가입하기\"}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Auth;","import React from \"react\";\r\nimport { run } from \"python-shell\";\r\nimport \"./Comments.css\";\r\n\r\n\r\nconst Comment = ({commentObject, isLabel}) =>(\r\n    <div className=\"comment_box\">\r\n        <p className=\"comments\">{commentObject.comments}</p>\r\n        {isLabel ? <p className=\"label_ture label\">악성댓글입니다</p> : <p className=\"label_false label\">악성댓글이 아닙니다.</p>}\r\n    </div>\r\n);\r\n\r\nexport default Comment;","\r\nimport {dbService} from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Comment from \"components/Comment\";\r\nimport \"./Home.css\";\r\n\r\nconst Home= ({userObj}) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [nweets, setNweets] = useState([]);\r\n    const [comment, setComment] = useState([]); \r\n\r\n\r\n    const getComments = async () => {\r\n        const dbComments = await dbService.collection(\"comments\").get();\r\n        dbComments.forEach((document) => console.log(document.data()));\r\n    };\r\n    \r\n    useEffect(() => {\r\n        dbService.collection(\"url\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id, \r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n        getComments();\r\n    }, []);\r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        \r\n        await dbService.collection(\"url\").add({\r\n            url:nweet,\r\n            createdAt:Date.now(),\r\n            creatorId:userObj.uid,\r\n            \r\n        });\r\n        setNweet(\"\"); \r\n    };\r\n    const onChange = (event) =>{\r\n        const { \r\n            target:{value}, \r\n        } = event;\r\n\r\n        setNweet(value);\r\n    };\r\n\r\n    return(\r\n    <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"url_box\">\r\n            <input \r\n                value={nweet} \r\n                onChange={onChange} \r\n                type=\"text\" \r\n                placeholder=\"URL을 입력해주세요\"\r\n                 maxLength={1000} \r\n                 required\r\n                 id=\"search\"\r\n            />\r\n            <input type=\"submit\" value=\"검색\" className=\"search_btn\"/>\r\n        </form>\r\n        \r\n        <div className=\"listT\">\r\n            <div className=\"comment_list\">댓글 리스트</div>\r\n            <div className=\"comments\">\r\n                {comment.map(comments => (\r\n                    <Comment\r\n                    key={comments.id}\r\n                    commentObject={comments}\r\n                    isLabel ={comments.label}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\n\r\nconst Navigation = () => (\r\n    <nav className=\"nav\">\r\n        <ul><li><Link to=\"/\">Home</Link></li></ul>\r\n        <ul><li><Link to=\"/profile\">My Profile</Link></li></ul>\r\n    </nav>\r\n);\r\n\r\nexport default Navigation;","import Navigation from \"components/Navigation\";\r\nimport { authService } from \"fbase\";\r\nimport { auth } from \"firebase\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n    const history = useHistory();\r\n    const onLogOutClick= () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    \r\n    return (\r\n    <>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n    );\r\n};","import React from \"react\";\r\nimport {HashRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter= ({isLoggedIn, userObj}) => {\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                <>\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj}/>\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile/>\r\n                </Route>\r\n                \r\n                </>) : (\r\n                <>\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                \r\n                </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from \"fbase\";\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj(user);\n      }\n      setInit(true)\n    });\n  }, [])\n  return (\n    <>\n    {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing....\"}\n    </>\n  );\n} \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}